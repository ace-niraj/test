{"version":3,"sources":["data.js","Confirm.js","App.js","index.js"],"names":["step_one","id","label","name","type","select","step_two","district_data","value","AlertDialog","props","React","useState","open","setOpen","handleClose","Button","variant","color","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","style","width","DialogContentText","DialogActions","handleSubmit","autoFocus","StepOne","next","data","Grid","container","alignItems","justify","marginTop","item","xs","Card","CardContent","initialValues","onSubmit","val","console","log","autoComplete","direction","spacing","map","el","fullWidth","component","TextField","MenuItem","StepTwo","prev","values","FinalStep","height","App","paymentType","firstName","lastName","amount","receiverName","purpose","description","setData","currentStep","setCurrentStep","success","setSuccess","makeRequest","formData","handleNextStep","newData","final","steps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58a036ce.chunk.js","sourcesContent":["export const step_one = [\r\n  {\r\n    id: 42,\r\n    label: 'Payout District',\r\n    name: 'payoutDistrict',\r\n    type: '',\r\n    select: true,\r\n  },\r\n  {\r\n    id: 0,\r\n    label: 'Payment Amount',\r\n    name: 'paymentAmount',\r\n    type: 'number',\r\n  },\r\n\r\n  // {\r\n  //   id: 7,\r\n  //   label: 'Purpose Of Remitance',\r\n  //   name: 'purpose',\r\n  //   type: '',\r\n  // },\r\n];\r\nexport const step_two = [\r\n  {\r\n    id: 1,\r\n    label: 'Receiver Name',\r\n    name: 'receiverName',\r\n    type: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'Receiver Mobile',\r\n    name: 'receiverMobile',\r\n    type: '',\r\n  },\r\n  {\r\n    id: 3,\r\n    label: 'Receiver Address',\r\n    name: 'receiverAddress',\r\n    type: '',\r\n  },\r\n  {\r\n    id: 4,\r\n    label: 'Receiver CIty',\r\n    name: 'receiverCity',\r\n    type: '',\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    label: 'Purpose',\r\n    name: 'purpose',\r\n    type: '',\r\n  },\r\n];\r\nexport const payment_type = [\r\n  {\r\n    id: 0,\r\n    value: 'B',\r\n    name: 'Bank',\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 'C',\r\n    name: 'Cash',\r\n  },\r\n];\r\nexport const district_data = [\r\n  {\r\n    id: 0,\r\n    value: '1',\r\n    name: 'Dummy1',\r\n  },\r\n  {\r\n    id: 1,\r\n    value: '2',\r\n    name: 'Dummy2',\r\n  },\r\n  {\r\n    id: 2,\r\n    value: '3',\r\n    name: 'Dummy3',\r\n  },\r\n  {\r\n    id: 4,\r\n    value: '4',\r\n    name: 'Dummy4',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant='contained' color='primary' onClick={handleClickOpen}>\r\n        Submit\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='alert-dialog-title'\r\n        aria-describedby='alert-dialog-description'\r\n      >\r\n        <DialogTitle id='alert-dialog-title'>Are you sure ?</DialogTitle>\r\n        <DialogContent style={{ width: '500px' }}>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            Receiver Name : .... <br /> Receiver Account : ...\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            No\r\n          </Button>\r\n          <Button onClick={props.handleSubmit} color='primary' autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport { Button, Card, CardContent, Grid, MenuItem } from '@material-ui/core';\nimport { step_one, district_data, payment_type, step_two } from './data';\nimport CustomizedDialogs from './Confirm';\nconst App = () => {\n  const [data, setData] = useState({\n    paymentType: '',\n    firstName: '',\n    lastName: '',\n    amount: 0,\n    receiverName: '',\n    purpose: '',\n    description: '',\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const [success, setSuccess] = useState(false);\n  const makeRequest = formData => {\n    console.log('form submitted', formData);\n    return <FinalStep />;\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      makeRequest(newData);\n      setSuccess(!success);\n    }\n\n    setCurrentStep(() => currentStep + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(() => currentStep - 1);\n  };\n\n  const steps = [\n    <StepOne next={handleNextStep} data={data} />,\n    <StepTwo prev={handlePrevStep} next={handleNextStep} data={data} />,\n  ];\n\n  console.log(data);\n\n  return <> {success ? <FinalStep /> : steps[currentStep]} </>;\n};\n\nconst StepOne = ({ next, data }) => {\n  const handleSubmit = val => {\n    console.log(val);\n    next(val);\n  };\n  return (\n    <Grid container alignItems='center' justify='center'>\n      <Grid style={{ marginTop: '1%' }} item xs={6}>\n        <Card>\n          <CardContent>\n            <h1>Step 1</h1>\n\n            <Formik initialValues={data} onSubmit={handleSubmit}>\n              <Form autoComplete='off'>\n                <Grid container direction='column' spacing={3}>\n                  {step_one.map(el => {\n                    return (\n                      <Grid key={el.id} item>\n                        <Field\n                          fullWidth\n                          type={el.type}\n                          name={el.name}\n                          select={el.select ? true : false}\n                          component={TextField}\n                          label={el.label}\n                        >\n                          {el.select\n                            ? district_data.map(el => {\n                                return (\n                                  <MenuItem key={el.id} value={el.value}>\n                                    {el.name}\n                                  </MenuItem>\n                                );\n                              })\n                            : ''}\n                        </Field>\n                      </Grid>\n                    );\n                  })}\n\n                  <Grid item>\n                    <Button color='primary' variant='contained' type='submit'>\n                      Next\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Form>\n            </Formik>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst StepTwo = ({ data, next, prev }) => {\n  const handleSubmit = values => {\n    next(values, true);\n  };\n\n  return (\n    <>\n      <Grid container alignItems='center' justify='center'>\n        <Grid style={{ marginTop: '1%' }} item xs={6}>\n          <Card>\n            <CardContent>\n              <h1>Step 2</h1>\n              <Formik initialValues={data} onSubmit={handleSubmit}>\n                {props => (\n                  <Form autoComplete='off'>\n                    <Grid container direction='column' spacing={4}>\n                      {step_two.map(el => {\n                        return (\n                          <Grid item>\n                            <Field\n                              fullWidth\n                              name={el.name}\n                              component={TextField}\n                              label={el.label}\n                            />\n                          </Grid>\n                        );\n                      })}\n\n                      <Grid item>\n                        <Grid container spacing={4}>\n                          <Grid item>\n                            <Button\n                              color='primary'\n                              variant='contained'\n                              type='button'\n                              onClick={() => prev(props.values)}\n                            >\n                              Back {console.log(props.values)}\n                            </Button>\n                          </Grid>\n                          <Grid item>\n                            <CustomizedDialogs\n                              handleSubmit={handleSubmit}\n                              type='submit'\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Form>\n                )}\n              </Formik>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst FinalStep = () => {\n  return (\n    <>\n      <Grid container alignItems='center' justify='center'>\n        <Grid style={{ marginTop: '10%' }} item xs={6}>\n          <Card style={{ height: '200px' }}>\n            <CardContent>\n              <center>\n                <h1 style={{ color: 'green' }}>Transaction Success</h1>\n              </center>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}