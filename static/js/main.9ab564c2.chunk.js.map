{"version":3,"sources":["App.js","index.js"],"names":["StepOne","next","data","Grid","container","alignItems","justify","style","marginTop","item","xs","Card","CardContent","initialValues","onSubmit","val","autoComplete","direction","spacing","fullWidth","name","component","TextField","label","type","alignContent","Button","color","variant","StepTwo","prev","values","props","onClick","console","log","marginLeft","FinalStep","height","App","useState","firstName","lastName","amount","receiverName","purpose","description","setData","currentStep","setCurrentStep","success","setSuccess","makeRequest","formData","handleNextStep","newData","final","steps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ab564c2.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  StepLabel,\n  Stepper,\n} from '@material-ui/core';\n\nconst App = () => {\n  const [data, setData] = useState({\n    firstName: '',\n    lastName: '',\n    amount: 0,\n    receiverName: '',\n    purpose: '',\n    description: '',\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const [success, setSuccess] = useState(false);\n  const makeRequest = formData => {\n    console.log('form submitted', formData);\n    return <FinalStep />;\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      makeRequest(newData);\n      setSuccess(!success);\n    }\n\n    setCurrentStep(() => currentStep + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(() => currentStep - 1);\n  };\n\n  const steps = [\n    <StepOne next={handleNextStep} data={data} />,\n    <StepTwo prev={handlePrevStep} next={handleNextStep} data={data} />,\n  ];\n\n  console.log(data);\n\n  return <> {success ? <FinalStep /> : steps[currentStep]} </>;\n};\n\nconst StepOne = ({ next, data }) => {\n  const handleSubmit = val => {\n    next(val);\n  };\n  return (\n    <Grid container alignItems='center' justify='center'>\n      <Grid style={{ marginTop: '10%' }} item xs={6}>\n        <Card>\n          <CardContent>\n            <Formik initialValues={data} onSubmit={handleSubmit}>\n              <Form autoComplete='off'>\n                <Grid container direction='column' spacing={4}>\n                  <Grid item>\n                    <Field\n                      fullWidth\n                      name='firstName'\n                      component={TextField}\n                      label='First Name'\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Field\n                      fullWidth\n                      name='lastName'\n                      component={TextField}\n                      label='Last Name'\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Field\n                      fullWidth\n                      name='amount'\n                      type='number'\n                      component={TextField}\n                      label='Amount'\n                    />\n                  </Grid>\n                  <Grid alignContent='flex-end' item>\n                    <Button color='primary' variant='contained' type='submit'>\n                      Next\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Form>\n            </Formik>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst StepTwo = ({ data, next, prev }) => {\n  const handleSubmit = values => {\n    next(values, true);\n  };\n\n  return (\n    <>\n      <Grid container alignItems='center' justify='center'>\n        <Grid style={{ marginTop: '10%' }} item xs={6}>\n          <Card>\n            <CardContent>\n              <Formik initialValues={data} onSubmit={handleSubmit}>\n                {props => (\n                  <Form autoComplete='off'>\n                    <Grid container direction='column' spacing={4}>\n                      <Grid item>\n                        <Field\n                          fullWidth\n                          name='receiverName'\n                          component={TextField}\n                          label='Receiver Name'\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Field\n                          fullWidth\n                          name='purpose'\n                          component={TextField}\n                          label='Purpose'\n                        />\n                      </Grid>\n\n                      <Grid alignContent='flex-end' item>\n                        <Button\n                          color='primary'\n                          variant='contained'\n                          type='button'\n                          onClick={() => prev(props.values)}\n                        >\n                          Back {console.log(props.values)}\n                        </Button>\n                        <Button\n                          style={{ marginLeft: '20px' }}\n                          color='primary'\n                          variant='contained'\n                          type='submit'\n                        >\n                          Submit\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Form>\n                )}\n              </Formik>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst FinalStep = () => {\n  return (\n    <>\n      <Grid container alignItems='center' justify='center'>\n        <Grid style={{ marginTop: '10%' }} item xs={6}>\n          <Card style={{ height: '200px' }}>\n            <CardContent>\n              <center>\n                <h1 style={{ color: 'green' }}>Transaction Success</h1>\n              </center>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}