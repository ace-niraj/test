{"version":3,"sources":["data.js","App.js","index.js"],"names":["payment_type","id","value","name","district_data","remit_data","label","type","StepOne","next","data","Grid","container","alignItems","justify","style","marginTop","item","xs","Card","CardContent","initialValues","onSubmit","val","console","log","autoComplete","direction","spacing","fullWidth","component","TextField","select","map","el","MenuItem","margin","Button","color","variant","StepTwo","prev","values","props","alignContent","onClick","marginLeft","FinalStep","height","App","useState","paymentType","firstName","lastName","amount","receiverName","purpose","description","setData","currentStep","setCurrentStep","success","setSuccess","makeRequest","formData","handleNextStep","newData","final","steps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd67d0b7.chunk.js","sourcesContent":["const remit_data = [\r\n  {\r\n    id: 0,\r\n    label: 'Payment Amount',\r\n    name: 'paymentAmount',\r\n    type: 'number',\r\n  },\r\n  {\r\n    id: 1,\r\n    label: 'Sender Name',\r\n    name: 'senderName',\r\n    type: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'Sender Mobile',\r\n    name: 'senderMobile',\r\n    type: '',\r\n  },\r\n  {\r\n    id: 3,\r\n    label: 'Sender Address',\r\n    name: 'senderAddress',\r\n    type: '',\r\n  },\r\n  {\r\n    id: 4,\r\n    label: 'Sender CIty',\r\n    name: 'senderCity',\r\n    type: '',\r\n  },\r\n  {\r\n    id: 1,\r\n    label: 'Sender Id Type',\r\n    name: 'senderIdType',\r\n    type: '',\r\n  },\r\n  {\r\n    id: 1,\r\n    label: 'Sender Id Number',\r\n    name: 'senderIdName',\r\n    type: '',\r\n  },\r\n  {\r\n    id: 1,\r\n    label: 'Purpose Of Remitance',\r\n    name: 'purpose',\r\n    type: '',\r\n  },\r\n];\r\nexport const payment_type = [\r\n  {\r\n    id: 0,\r\n    value: 'B',\r\n    name: 'Bank',\r\n  },\r\n  {\r\n    id: 1,\r\n    value: 'C',\r\n    name: 'Cash',\r\n  },\r\n];\r\nexport const district_data = [\r\n  {\r\n    id: 0,\r\n    value: '1',\r\n    name: 'Dummy1',\r\n  },\r\n  {\r\n    id: 1,\r\n    value: '2',\r\n    name: 'Dummy2',\r\n  },\r\n  {\r\n    id: 2,\r\n    value: '3',\r\n    name: 'Dummy3',\r\n  },\r\n  {\r\n    id: 4,\r\n    value: '4',\r\n    name: 'Dummy4',\r\n  },\r\n];\r\nexport default remit_data;\r\n","import { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  StepLabel,\n  Stepper,\n} from '@material-ui/core';\nimport remit_data, { district_data, payment_type } from './data';\n\nconst App = () => {\n  const [data, setData] = useState({\n    paymentType: '',\n    firstName: '',\n    lastName: '',\n    amount: 0,\n    receiverName: '',\n    purpose: '',\n    description: '',\n  });\n  const [currentStep, setCurrentStep] = useState(0);\n  const [success, setSuccess] = useState(false);\n  const makeRequest = formData => {\n    console.log('form submitted', formData);\n    return <FinalStep />;\n  };\n\n  const handleNextStep = (newData, final = false) => {\n    setData(prev => ({ ...prev, ...newData }));\n\n    if (final) {\n      makeRequest(newData);\n      setSuccess(!success);\n    }\n\n    setCurrentStep(() => currentStep + 1);\n  };\n\n  const handlePrevStep = newData => {\n    setData(prev => ({ ...prev, ...newData }));\n    setCurrentStep(() => currentStep - 1);\n  };\n\n  const steps = [\n    <StepOne next={handleNextStep} data={data} />,\n    <StepTwo prev={handlePrevStep} next={handleNextStep} data={data} />,\n  ];\n\n  console.log(data);\n\n  return <> {success ? <FinalStep /> : steps[currentStep]} </>;\n};\n\nconst StepOne = ({ next, data }) => {\n  const handleSubmit = val => {\n    console.log(val);\n    next(val);\n  };\n  return (\n    <Grid container alignItems='center' justify='center'>\n      <Grid style={{ marginTop: '1%' }} item xs={6}>\n        <Card>\n          <CardContent>\n            <h1>Fill the below form for transaction</h1>\n\n            <Formik initialValues={data} onSubmit={handleSubmit}>\n              <Form autoComplete='off'>\n                <Grid container direction='column' spacing={3}>\n                  <Grid item>\n                    <Field\n                      fullWidth\n                      name='paymentType'\n                      component={TextField}\n                      select\n                      label='Payment Type'\n                    >\n                      {payment_type.map(el => {\n                        return <MenuItem value={el.value}>{el.name}</MenuItem>;\n                      })}\n                    </Field>\n                  </Grid>\n                  <Grid item>\n                    <Field\n                      fullWidth\n                      name='payoutDistrict'\n                      component={TextField}\n                      select\n                      margin='normal'\n                      label='Payout District'\n                    >\n                      {district_data.map(el => {\n                        return <MenuItem value={el.value}>{el.name}</MenuItem>;\n                      })}\n                    </Field>\n                  </Grid>\n                  {remit_data.map(el => {\n                    return (\n                      <Grid item>\n                        <Field\n                          fullWidth\n                          type={el.type}\n                          name={el.name}\n                          component={TextField}\n                          label={el.label}\n                        />\n                      </Grid>\n                    );\n                  })}\n\n                  <Grid item>\n                    <Button color='primary' variant='contained' type='submit'>\n                      Next\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Form>\n            </Formik>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst StepTwo = ({ data, next, prev }) => {\n  const handleSubmit = values => {\n    next(values, true);\n  };\n\n  return (\n    <>\n      <Grid container alignItems='center' justify='center'>\n        <Grid style={{ marginTop: '10%' }} item xs={6}>\n          <Card>\n            <CardContent>\n              <Formik initialValues={data} onSubmit={handleSubmit}>\n                {props => (\n                  <Form autoComplete='off'>\n                    <Grid container direction='column' spacing={4}>\n                      <Grid item>\n                        <Field\n                          fullWidth\n                          name='receiverName'\n                          component={TextField}\n                          label='Receiver Name'\n                        />\n                      </Grid>\n                      <Grid item>\n                        <Field\n                          fullWidth\n                          name='purpose'\n                          component={TextField}\n                          label='Purpose'\n                        />\n                      </Grid>\n\n                      <Grid alignContent='flex-end' item>\n                        <Button\n                          color='primary'\n                          variant='contained'\n                          type='button'\n                          onClick={() => prev(props.values)}\n                        >\n                          Back {console.log(props.values)}\n                        </Button>\n                        <Button\n                          style={{ marginLeft: '20px' }}\n                          color='primary'\n                          variant='contained'\n                          type='submit'\n                        >\n                          Submit\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Form>\n                )}\n              </Formik>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst FinalStep = () => {\n  return (\n    <>\n      <Grid container alignItems='center' justify='center'>\n        <Grid style={{ marginTop: '10%' }} item xs={6}>\n          <Card style={{ height: '200px' }}>\n            <CardContent>\n              <center>\n                <h1 style={{ color: 'green' }}>Transaction Success</h1>\n              </center>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}